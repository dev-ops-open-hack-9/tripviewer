# This is a basic workflow to help you get started with Actions

name: userprofile
on:
  push:
    paths:
      - 'apis/userprofile/**'
      - '.github/workflows/userprofile.yml'
    branches: [ main ]
  pull_request:
    paths:
      - 'apis/userprofile/**'
      - '.github/workflows/userprofile.yml'
    branches: [ main ]
  
env:
  ACRNAME: "openhackck258x60acr"
  IMAGE_NAME_USERPROFILE: "devopsoh/api-userprofile"
  BASEIMAGETAG_USERPROFILE: ${{ github.sha }}
  AZURE_WEBAPP_NAME: "openhackck258x60userprofile"
  CONTAINER_REGISTRY: openhackck258x60acr.azurecr.io


jobs:

  Build_Image:
    runs-on: ubuntu-20.04

    steps:

    - name: Recuperation du repos 
      uses: actions/checkout@v2
        
#    - name: Docker Build USERPROFILE
#      run: |
#        cd apis/userprofile && docker build . -t ${{ env.ACRNAME }}.azurecr.io/${{ env.IMAGE_NAME_USERPROFILE }}:${{ env.BASEIMAGETAG_USERPROFILE }}      
    
    - name: Login ACR for push
      uses: Azure/login@v1
      with:        
        creds: ${{secrets.AZURE_CREDENTIALS}}
        
    - name: Log ACR
      run: |
        az acr login --name ${{ env.ACRNAME }}
        
#    - name: Push to ACR
#      run: |
#        docker push ${{ env.ACRNAME }}.azurecr.io/${{ env.IMAGE_NAME_USERPROFILE }}:${{ env.BASEIMAGETAG_USERPROFILE }}

    - name: Start the stage
      run: |
        az webapp start -g openhackck258x60rg -n ${{ env.AZURE_WEBAPP_NAME }} --slot staging
    
#    - name: 'Deploy to Azure Web App for Container'
#      uses: azure/webapps-deploy@v2
#      with: 
#        app-name: ${{ env.AZURE_WEBAPP_NAME }} 
#        images: ${{ env.CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME_USERPROFILE }}:${{ env.BASEIMAGETAG_USERPROFILE }}

    - name: 'Swap'
      run: |
        sleep 15s
        testStage=`curl -sb -i https://openhackck258x60userprofile.azurewebsites.net/api/healthcheck/user | grep -q Healthy && echo "success" || echo 'failed'`
        echo 'testStage' $testStage
        [ $testStage == 'success' ] && az webapp deployment slot swap -g openhackck258x60rg -n ${{ env.AZURE_WEBAPP_NAME }} --slot staging --target-slot production
        testProd=`curl -sb -i https://openhackck258x60userprofile.azurewebsites.net/api/healthcheck/user | grep -q Healthy && echo "success" || echo 'failed'`
        echo 'testProd' $testProd
        [ $testProd != 'success' ] && az webapp deployment slot swap -g openhackck258x60rg -n ${{ env.AZURE_WEBAPP_NAME }} --slot production --target-slot staging || echo "Successful"
        
    - name: Stop the stage
      run: |
        az webapp stop -g openhackck258x60rg -n ${{ env.AZURE_WEBAPP_NAME }} --slot staging

       
    
        
        
        




